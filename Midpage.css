/* Applying Global CSS */
* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	min-height: 100vh;
	background: #000;
}

.title_color
{
    display: flex;
	justify-content: center;
	align-items: center;
    background-color: black;
    font-size: 70px;
}

p
{
    font-family:ALGERIAN;
    text-align:center;
    color:white;
    font-size:100px;
}

/*for background video*/
#myVideo 
{
    position: fixed;
    right: 0;
    bottom: 0;
    opacity: 0.2;
}

/*For select element statement*/
.choose
{
    display: flex;
	justify-content: center;
	align-items: center;
    color:rgb(234, 254, 17);
    font-size: 20px;
}

/*For 3d rotation*/
#flex
{
    display: flex;
	justify-content: center;
	align-items: center;
    margin-left: 750px;
    margin-top: 7em;
    min-height: 10vh;
}

/* Adding transform-style CSS property to the boxes */
.box {
	position: relative;
	width: 200px;
	height: 200px;
	transform-style: preserve-3d;
	animation: animate 20s linear infinite;
}

/* Adding keyframes for animation */
/* For maintaining speed */
@keyframes animate {
	0% {
		transform: perspective(1200px) rotateY(0deg);
	}

    25% {
		transform: perspective(1200px) rotateY(90deg);
	}

    50% {
		transform: perspective(1200px) rotateY(180deg);
	}

	100% {
		transform: perspective(1200px) rotateY(360deg);
	}
}

/* Adding CSS to all the span tags for animation */
.box span {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	transform-origin: center;
	transform-style: preserve-3d;
	/* For maintaining the gap between */
	transform: 
	rotateY(calc(var(--i) * 70deg)) translateZ(400px);
	-webkit-box-reflect: below 0px linear-gradient(transparent, transparent, #0004);
}

/* Adding object-fit CSS property to all the images */
.box span img {
	position: absolute;
	top: 0;
	left: 0;
	height: 350px;
	width: 250px;
    border: 4px solid white;
    border-radius: 20px;
	object-fit: cover;
}
